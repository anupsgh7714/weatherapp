{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React Projects\\\\weatherapp\\\\src\\\\Weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Weather = () => {\n  _s();\n\n  const [Search, setSearch] = useState('Faridabad');\n  const [City, setCity] = useState([null]);\n\n  const inputEvent = event => {\n    setSearch(event.target.value);\n  };\n\n  const getData = async () => {\n    const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${Search}&units=metric&appid=ddcc2fffbddbb5d7ee6a438fadfa9b1a`);\n    const data = await res.json();\n    console.log(data);\n    setCity(data.main);\n  };\n\n  useEffect(() => {\n    getData();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Live Weather App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"Search City\",\n          onChange: inputEvent,\n          value: Search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: !City ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No Data Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"city_temp\",\n              children: [City.temp, \" \\u2103\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"city_name\",\n              children: Search\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Mintemp : \", City.temp_min, \" \\u2103\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }, this), \"|\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Maxtemp : \", City.temp_max, \" \\u2103\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Weather, \"hdJ9h2GUmnM27iNj6fIy1RFI610=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/user/Desktop/React Projects/weatherapp/src/Weather.jsx"],"names":["React","useState","useEffect","Weather","Search","setSearch","City","setCity","inputEvent","event","target","value","getData","res","fetch","data","json","console","log","main","temp","temp_min","temp_max"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,WAAD,CAApC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAC,IAAD,CAAD,CAAhC;;AAEA,QAAMO,UAAU,GAAIC,KAAD,IAAW;AAC1BJ,IAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AAEH,GAHD;;AAKA,QAAMC,OAAO,GAAG,YAAY;AACxB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,qDAAoDV,MAAO,sDAA7D,CAAvB;AACA,UAAMW,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAR,IAAAA,OAAO,CAACQ,IAAI,CAACI,IAAN,CAAP;AACH,GALD;;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACbU,IAAAA,OAAO;AACT,GAFQ,CAAT;AAIA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,WAAW,EAAC,aAFhB;AAGI,UAAA,QAAQ,EAAEJ,UAHd;AAII,UAAA,KAAK,EAAEJ;AAJX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQK;AAAA,oBACK,CAACE,IAAD,gBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR,gBAAgC;AAAA,oCAC9B;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,yBAA4BA,IAAI,CAACc,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD8B,eAEtC;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,wBACKhB;AADL;AAAA;AAAA;AAAA;AAAA,oBAFsC,eAKtC;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACI;AAAA,yCAAiBE,IAAI,CAACe,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,oBAEI;AAAA,yCAAiBf,IAAI,CAACgB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALsC;AAAA;AAAA;AAAA;AAAA;AAAA;AADrC;AAAA;AAAA;AAAA;AAAA,gBARL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA+BH,CAnDD;;GAAMnB,O;;KAAAA,O;AAqDN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './weather.css';\r\n\r\nconst Weather = () => {\r\n    const [Search, setSearch] = useState('Faridabad');\r\n    const [City, setCity] = useState([null]);\r\n\r\n    const inputEvent = (event) => {\r\n        setSearch(event.target.value);\r\n\r\n    }\r\n\r\n    const getData = async () => {\r\n        const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${Search}&units=metric&appid=ddcc2fffbddbb5d7ee6a438fadfa9b1a`);\r\n        const data = await res.json();\r\n        console.log(data);\r\n        setCity(data.main);\r\n    }\r\n\r\n    useEffect(() => {\r\n       getData();\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className='container'>\r\n                <h1>Live Weather App</h1>\r\n                <div className='card'>\r\n                    <input\r\n                        type='search'\r\n                        placeholder='Search City'\r\n                        onChange={inputEvent}\r\n                        value={Search}\r\n                     />\r\n\r\n                     <div>\r\n                         {!City ? <p>No Data Found</p> : (<div>\r\n                            <div className='city_temp'>{City.temp} &#8451;</div>\r\n                    <div className='city_name'>\r\n                        {Search}\r\n                    </div>\r\n                    <div className='temp'>\r\n                        <span>Mintemp : {City.temp_min} &#8451;</span>|\r\n                        <span>Maxtemp : {City.temp_max} &#8451;</span>\r\n                    </div>\r\n                    </div>)\r\n                         \r\n                         }\r\n                     </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}